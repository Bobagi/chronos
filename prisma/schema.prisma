generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum GameMode {
  CLASSIC
  ATTRIBUTE_DUEL
}

enum DuelStage {
  PICK_CARD
  PICK_ATTRIBUTE
  REVEAL
  RESOLVED
}

model Player {
  id        String   @id @default(uuid())
  username  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  gamesAsA  Game[]   @relation("PlayerA")
  gamesAsB  Game[]   @relation("PlayerB")
}

model Game {
  id        String   @id @default(uuid())

  playerAId String
  playerBId String
  playerA   Player   @relation("PlayerA", fields: [playerAId], references: [id])
  playerB   Player   @relation("PlayerB", fields: [playerBId], references: [id])

  turn      Int
  hp        Json
  winner    String?
  hands     Json
  decks     Json
  log       Json

  mode        GameMode   @default(CLASSIC)
  duelStage   DuelStage?
  duelCenter  Json?
  discardPiles Json?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Card {
  id          String   @id @default(uuid())
  code        String   @unique
  name        String
  description String
  number      Int      @default(0)
  damage      Int?
  heal        Int?
  imageUrl    String
  might       Int      @default(0)
  fire        Int      @default(0)
  magic       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CardTemplate {
  id         String   @id @default(uuid())
  name       String   @unique
  frameUrl   String
  fontColor  String
  rarity     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
